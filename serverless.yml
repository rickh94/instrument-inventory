service: instrument-inventory

plugins:
  - serverless-python-requirements
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: false
  stage: ${opt:stage, self:provider.stage}
  environment: ${file(env.yml):${self:custom.stage}, file(env.yml):default}

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  environment:
    TABLE_NAME: ${self:custom.environment.table_name}
    AIRTABLE_BASE_KEY: ${self:custom.environment.base_key}
    AIRTABLE_API_KEY: ${self:custom.environment.api_key}

functions:
  retrieve-single:
    handler: retrieve.single
    events:
      - http:
          path: retrieve-single
          method: post
          cors: true
          authorizer: aws_iam

  retrieve-multiple:
    handler: retrieve.multiple
    events:
      - http:
          path: retrieve-multiple
          method: post
          cors: true
          authorizer: aws_iam

  sign-out:
    handler: sign_out.main
    events:
      - http:
          path: sign-out
          method: post
          cors: true
          authorizer: aws_iam

  create:
    handler: create.main
    events:
      - http:
          path: create
          method: post
          cors: true
          authorizer: aws_iam

resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
  - ${file(resources/s3-bucket.yml)}